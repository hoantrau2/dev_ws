[0.054s] Invoking command in '/home/ngochoan/dev_ws/build/cpp_pubsub': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/ngochoan/dev_ws/build/cpp_pubsub -- -j8 -l8
[0.104s] [35m[1mConsolidate compiler generated dependencies of target listener[0m
[0.118s] [ 33%] Built target listener_pico
[0.119s] [ 66%] Built target talker
[0.128s] [ 83%] [32mBuilding CXX object CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o[0m
[2.067s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:40:56:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[KSharedPtr[m[Kâ€™ in â€˜[01m[Kstruct StdMsgsMsgFloat64Sequence[m[Kâ€™ does not name a type
[2.067s]    40 |   void topic_callback(const StdMsgsMsgFloat64Sequence::[01;31m[KSharedPtr[m[K msg) const
[2.067s]       |                                                        [01;31m[K^~~~~~~~~[m[K
[2.106s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:[m[K In member function â€˜[01m[Kvoid MinimalSubscriber::topic_callback(int) const[m[Kâ€™:
[2.106s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:42:13:[m[K [01;31m[Kerror: [m[Kinvalid operands of types â€˜[01m[Kconst int[m[Kâ€™ and â€˜[01m[Kstd::nullptr_t[m[Kâ€™ to binary â€˜[01m[Koperator!=[m[Kâ€™
[2.106s]    42 |     if ([01;31m[Kmsg != nullptr[m[K) {
[2.106s]       |         [01;31m[K~~~~^~~~~~~~~~[m[K
[2.106s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24[m[K,
[2.106s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40[m[K,
[2.106s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.107s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.107s]                  from [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3[m[K:
[2.107s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:44:76:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Kmsg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[2.107s]    44 |     RCLCPP_INFO(this->get_logger(), "Received sequence with size %zu", msg.[01;31m[Ksize[m[K);
[2.108s]       |                                                                            [01;31m[K^~~~[m[K
[2.108s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:46:32:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Ksize[m[Kâ€™ in â€˜[01m[Kmsg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[2.108s]    46 |   for (uint32_t i = 0; i < msg.[01;31m[Ksize[m[K; ++i) {
[2.108s]       |                                [01;31m[K^~~~[m[K
[2.108s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/logging.hpp:24[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:40[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.108s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.109s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.109s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.109s]                  from [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3[m[K:
[2.109s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:47:59:[m[K [01;31m[Kerror: [m[Krequest for member â€˜[01m[Kdata[m[Kâ€™ in â€˜[01m[Kmsg[m[Kâ€™, which is of non-class type â€˜[01m[Kconst int[m[Kâ€™
[2.109s]    47 |         RCLCPP_INFO(this->get_logger(), "  Item: %f", msg.[01;31m[Kdata[m[K[i].data);
[2.109s]       |                                                           [01;31m[K^~~~[m[K
[2.506s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
[2.506s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.507s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.507s]                  from [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3[m[K:
[2.507s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; MessageT = StdMsgsMsgFloat64Sequence; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.508s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; ROSMessageType = StdMsgsMsgFloat64Sequence; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.508s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = StdMsgsMsgFloat64Sequence; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.508s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.508s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.508s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:29:73:[m[K   required from here
[2.508s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K [01;31m[Kerror: [m[Kno match for â€˜[01m[Koperator=[m[Kâ€™ (operand types are â€˜[01m[Krclcpp::detail::AnySubscriptionCallbackHelper<StdMsgsMsgFloat64Sequence, std::allocator<void>, false>::variant_type[m[Kâ€™ {aka â€˜[01m[Kstd::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >[m[Kâ€™} and â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<StdMsgsMsgFloat64Sequence, std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™})
[2.508s]   394 |       [01;31m[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)[m[K;
[2.508s]       |       [01;31m[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[2.508s] In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28[m[K,
[2.508s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24[m[K,
[2.508s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
[2.509s]                  from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
[2.509s]                  from [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:3[m[K:
[2.509s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.509s]  1461 |         [01;36m[Koperator[m[K=(_Tp&& __rhs)
[2.509s]       |         [01;36m[K^~~~~~~~[m[K
[2.509s] [01m[K/usr/include/c++/11/variant:1461:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[2.510s] /usr/include/c++/11/variant: In substitution of â€˜[01m[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(int)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™:
[2.510s] [01m[K/usr/include/c++/11/variant:1457:14:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(int)>][m[Kâ€™
[2.510s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; MessageT = StdMsgsMsgFloat64Sequence; AllocatorT = std::allocator<void>][m[Kâ€™
[2.510s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; ROSMessageType = StdMsgsMsgFloat64Sequence; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.510s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = StdMsgsMsgFloat64Sequence; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.510s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.510s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.510s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:29:73:[m[K   required from here
[2.510s] [01m[K/usr/include/c++/11/variant:1375:15:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
[2.511s]  1375 |         using [01;31m[K__accepted_type[m[K = __to_type<__accepted_index<_Tp>>;
[2.511s]       |               [01;31m[K^~~~~~~~~~~~~~~[m[K
[2.511s] /opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; MessageT = StdMsgsMsgFloat64Sequence; AllocatorT = std::allocator<void>][m[Kâ€™:
[2.511s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; ROSMessageType = StdMsgsMsgFloat64Sequence; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.511s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = StdMsgsMsgFloat64Sequence; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.511s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.511s] [01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = StdMsgsMsgFloat64Sequence; CallbackT = std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<StdMsgsMsgFloat64Sequence>; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<StdMsgsMsgFloat64Sequence, std::allocator<void> > >][m[Kâ€™
[2.511s] [01m[K/home/ngochoan/dev_ws/src/cpp_pubsub/src/subscriber_member_function.cpp:29:73:[m[K   required from here
[2.511s] [01m[K/usr/include/c++/11/variant:1398:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.511s]  1398 |       variant& [01;36m[Koperator[m[K=(const variant&) = default;
[2.511s]       |                [01;36m[K^~~~~~~~[m[K
[2.512s] [01m[K/usr/include/c++/11/variant:1398:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<StdMsgsMsgFloat64Sequence, std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kconst std::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&[m[Kâ€™
[2.512s]  1398 |       variant& operator=([01;36m[Kconst variant&[m[K) = default;
[2.512s]       |                          [01;36m[K^~~~~~~~~~~~~~[m[K
[2.512s] [01m[K/usr/include/c++/11/variant:1399:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}][m[Kâ€™
[2.512s]  1399 |       variant& [01;36m[Koperator[m[K=(variant&&) = default;
[2.512s]       |                [01;36m[K^~~~~~~~[m[K
[2.512s] [01m[K/usr/include/c++/11/variant:1399:26:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Krclcpp::detail::SubscriptionCallbackTypeHelper<StdMsgsMsgFloat64Sequence, std::_Bind<void (MinimalSubscriber::*(MinimalSubscriber*, std::_Placeholder<1>))(int) const>, void>::callback_type[m[Kâ€™ {aka â€˜[01m[Kstd::function<void(int)>[m[Kâ€™} to â€˜[01m[Kstd::variant<std::function<void(const StdMsgsMsgFloat64Sequence&)>, std::function<void(const StdMsgsMsgFloat64Sequence&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >)>, std::function<void(std::unique_ptr<StdMsgsMsgFloat64Sequence, std::default_delete<StdMsgsMsgFloat64Sequence> >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<const StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&)>, std::function<void(const std::shared_ptr<const StdMsgsMsgFloat64Sequence>&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>)>, std::function<void(std::shared_ptr<StdMsgsMsgFloat64Sequence>, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&[m[Kâ€™
[2.512s]  1399 |       variant& operator=([01;36m[Kvariant&&[m[K) = default;
[2.512s]       |                          [01;36m[K^~~~~~~~~[m[K
[4.238s] gmake[2]: *** [CMakeFiles/listener.dir/build.make:76: CMakeFiles/listener.dir/src/subscriber_member_function.cpp.o] Error 1
[4.238s] gmake[1]: *** [CMakeFiles/Makefile2:167: CMakeFiles/listener.dir/all] Error 2
[4.238s] gmake: *** [Makefile:146: all] Error 2
[4.240s] Invoked command in '/home/ngochoan/dev_ws/build/cpp_pubsub' returned '2': CMAKE_PREFIX_PATH=/opt/ros/humble /usr/bin/cmake --build /home/ngochoan/dev_ws/build/cpp_pubsub -- -j8 -l8
